[
{
"id":20,
"deliverytype":8,
"real_domain":"posters.cdn.telefonica.com",
"host":"posters.cdn.telefonica.com",
"awa_params":{
"state_machine":
{ "default_ttl":7200, "so_params": "Include \"/opt/p2pcdn/lib/awa_cfl/cdn_default_values.cfl\" Include \"/opt/p2pcdn/lib/awa_cfl/cdn.cfl\" enableStaleContent = Exp '1' staleMinTtl = 60 qsParamBlacklist= Exp 'q1' Include \"/opt/p2pcdn/lib/awa_cfl/cdn_ignore_qs.cfl\" (\"/\": Request([Replace(\"host\", \"checkhost.cdn.telefonica.com\")])) Include \"/opt/p2pcdn/lib/awa_cfl/cdn_ignore_qs_end.cfl\"" }
,
"origins":{
"policy":"BackUp",
"origin_list":[
{ "host":"10.95.151.1", "port":8000}
]
},
"debug_enabled":true
},
"name":"test",
"enabled":true,
"platform":8,
"https":{},
"node_tag":{}
}
,
{
"id":11,
"deliverytype":8,
"real_domain":"poster.cdn.telefonica.com",
"host":"poster.cdn.telefonica.com",
"awa_params":{
"state_machine":
{ "default_ttl":7200, "so_params": "Include \"/opt/p2pcdn/lib/awa_cfl/cdn_default_values.cfl\" (\"/\": Request([Replace(\"host\", \"thumbbox.gvp.telefonica.com\")])) Include \"/opt/p2pcdn/lib/awa_cfl/cdn.cfl\"" }
,
"origins":{
"policy":"BackUp",
"origin_list":[
{ "host":"127.0.0.1", "port":8080}
]
},
"debug_enabled":true
},
"name":"test",
"enabled":true,
"platform":8,
"https":{},
"node_tag":{}
}
,
{
"id":12,
"deliverytype":8,
"real_domain":"contentapi-ec.cdn.telefonica.com",
"host":"contentapi-ec.cdn.telefonica.com",
"awa_params":{
"state_machine":
{ "default_ttl":7200, "so_params": "Include \"/opt/p2pcdn/lib/awa_cfl/cdn_default_values.cfl\"  (\"/\": Request([Replace(\"host\", \"contentapi.gvp.telefonica.com\")]))  corsAllowAllOrigins = Exp \"0\" CORSsuffix = Exp \"gvp.telefonica.com\" Include \"/opt/p2pcdn/lib/awa_cfl/cdn.cfl\"" }
,
"origins":{
"policy":"BackUp",
"origin_list":[
{ "host":"127.0.0.1", "port":8080}
]
},
"debug_enabled":true
},
"name":"test",
"enabled":true,
"platform":8,
"https":{},
"node_tag":{}
}
,
{
"id":13,
"deliverytype":8,
"real_domain":"cdnpremiumposters.gvp.telefonica.com",
"host":"cdnpremiumposters.gvp.telefonica.com",
"awa_params":{
"state_machine":
{ "default_ttl":7200, "so_params":"(\"/\": Request([Replace(\"host\", \"premiumtvposters.gvp.telefonica.com\")])) Include \"/opt/p2pcdn/lib/awa_cfl/cdn_default_values.cfl\" Include \"/opt/p2pcdn/lib/awa_cfl/cdn.cfl\" year_str = Exp CXtract(Header(\"If-Modified-Since\") RegExpMatches \"\\s*\\S+, [0-9][0-9] \\S+ ([0-9]+).*\") has_ims = Not(year_str In [\"\"]) invalid_year = And(has_ims, (Atof year_str) < 1970) ('/': Cache(false, [] When invalid_year) Cache(true, [] When Not(invalid_year)))  " }
,
"origins":{
"policy":"BackUp",
"origin_list":[
{ "host":"127.0.0.1", "port":8080}
]
},
"debug_enabled":true
},
"name":"test",
"enabled":true,
"platform":8,
"https":{},
"node_tag":{}
}
,

{
"id":14,
"deliverytype":8,
"real_domain":"ottcache.dof6.com,test.dof6.com",
"host":"*.dof6.com",
"awa_params":{
"state_machine":
{ "default_ttl":7200, "so_params":"Include \"/opt/p2pcdn/lib/awa_cfl/cdn_default_values.cfl\" overloadHeaderPrefix = Exp \"MV-\" Include \"/opt/p2pcdn/lib/awa_cfl/cdn.cfl\" qsParamBlacklist= Exp \"TRACK_ID\" Include \"/opt/p2pcdn/lib/awa_cfl/cdn_ignore_qs.cfl\"  ('/': Request([Replace('host', 'lab.clientservices.dof6.com'), SetPath(calculatedPath)])) Include \"/opt/p2pcdn/lib/awa_cfl/cdn_ignore_qs_end.cfl\" " }
,
"origins":{
"policy":"BackUp",
"origin_list":[
{ "host":"127.0.0.1", "port":8080}
]
},
"debug_enabled":true
},
"name":"test",
"enabled":true,
"platform":8,
"https":{},
"node_tag":{}
}
,
{
"id":15,
"deliverytype":8,
"real_domain":"purgecache.dof6.com",
"host":"purgecache.dof6.com",
"awa_params":{
"state_machine":
{ "default_ttl":7200, "so_params":" Include \"/opt/p2pcdn/lib/awa_cfl/cdn_purge_default_values.cfl\" purgeHosts = Lexp [\"ottcache.dof6.com\"]  tokenSecret1 = Exp \"12345\" tokenSecret2 = Exp \"54321\" tokenExpiration = Exp \"18400\" tokenEnabled = Exp \"1\" Include \"/opt/p2pcdn/lib/awa_cfl/cdn_token.cfl\" Include \"/opt/p2pcdn/lib/awa_cfl/console.cfl\"" }
,
"origins":{
"policy":"BackUp",
"origin_list":[
{ "host":"127.0.0.1", "port":8080}
]
},
"debug_enabled":true
},
"name":"test",
"enabled":true,
"platform":8,
"https":{},
"node_tag":{}
}
,
{
"id":16,
"deliverytype":8,
"real_domain":"gvp.query",
"host":"gvp.query",
"awa_params":{
"state_machine":
{ "default_ttl":7200, "so_params":"ignoreQs = Map Include '/opt/p2pcdn/lib/awa_cfl/cdn_default_values.cfl'   Include '/opt/p2pcdn/lib/awa_cfl/cdn.cfl' qsParamBlacklist= Exp 'userid'  Include '/opt/p2pcdn/lib/awa_cfl/cdn_ignore_qs.cfl' ignoreqs = Not(ignoreQs[Header('Host')+calculatedPath] In [''])  ('/': CacheKey (ignoreQs[Header('Host')+calculatedPath] When ignoreqs  )  OnEnd ignoreQs[Header('Host')+calculatedPath] -> When Not(ResponseHeader('GVP-QUERY') In ['ignore']) OnEnd ignoreQs[Header('Host')+calculatedPath] <- Header('Host') + Path When And(ResponseHeader('GVP-QUERY') In ['ignore'], ignoreQs[Header('Host')+calculatedPath] In [''] )      )  "}
,
"origins":{
"policy":"BackUp",
"origin_list":[
{ "host":"127.0.0.1", "port":8080}
]
},
"debug_enabled":true
},
"name":"test",
"enabled":true,
"platform":8,
"https":{},
"node_tag":{}
}
,
{
"id":17,
"deliverytype":8,
"real_domain":"bug.test",
"host":"bug.test",
"awa_params":{
"state_machine":
{ "default_ttl":7200, "so_params":" ('/': CacheKey(Header('Host')+Path, Header('Host')+Path) Cache(true, [Replace('X-ALFONSO',Header('Host')+Path)])) "}
,
"origins":{
"policy":"BackUp",
"origin_list":[
{ "host":"127.0.0.1", "port":8080}
]
},
"debug_enabled":true
},
"name":"test",
"enabled":true,
"platform":8,
"https":{},
"node_tag":{}
}
]
